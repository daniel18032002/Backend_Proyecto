openapi: 3.0.2
info:
  title: Swagger Microservicio Gestion Academica - OpenAPI 1.0
  description: |
    Esta API es la interfaz para conectar el microservicio de gestión académica.

    Algunos enlaces útiles:
    - [Repositorio del microservicio](https://github.com/daniel18032002/Backend_Proyecto)
  termsOfService: http://swagger.io/terms/
  contact:
    email: GestionAcademica@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/license/mit
  version: "N/A"
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: facultad
    description: Id y Nombre de las facultades
    externalDocs:
      description: Más información sobre facultad
      url: http://localhost:8080/api/v1/facultad
  - name: carrera
    description: Id y Nombre de las carreras
    externalDocs:
      description: Más información sobre carreras
      url: http://localhost:8080/api/v1/carrera
  - name: materia
    description: Id y Nombre de las Materias
    externalDocs:
      description: Más información sobre materias
      url: http://localhost:8080/api/v1/materia
  - name: profesor
    description: Id y Nombre de los profesores
    externalDocs:
      description: Más información sobre profesores
      url: http://localhost:8080/api/v1/profesor
  - name: estudiante
    description: Id y Nombre de los estudiantes
    externalDocs:
      description: Más información sobre estudiantes
      url: http://localhost:8080/api/v1/estudiante

paths:
  /Facultad:
    get:
      tags:
        - Facultad
      summary: Obtener todas las facultades
      description: Retorna todas las facultades disponibles
      operationId: obtenerFacultades
      produces:
        - application/json
      responses:
        '200':
          description: Lista de facultades obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Facultad'
          example:
            - id: 1
              nombre: Ingeniería
            - id: 2
              nombre: Ciencias
        '401':
          description: No autorizado
    post:
      tags:
        - facultad
      summary: Crear facultad
      description: Solo lo crea el rol admin
      operationId: crearFacultad
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Facultad'
            example:
              nombre: Ingeniería Eléctrica
      responses:
        '200':
          description: Facultad creada correctamente
        '401':
          description: No autorizado
  
  /facultad/{id}:
    get:
      tags:
        - facultad
      summary: Obtener facultad por ID
      description: Retorna la facultad correspondiente al ID proporcionado
      operationId: obtenerFacultadPorId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la facultad a obtener
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Facultad obtenida correctamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Facultad'
          example:
            id: 1
            nombre: Ingeniería
        '401':
          description: No autorizado
        '404':
          description: Facultad no encontrada
    put:
      tags:
        - facultad
      summary: Actualizar facultad por ID
      description: Actualiza la facultad correspondiente al ID proporcionado
      operationId: actualizarFacultad
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la facultad a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Facultad'
            example:
              nombre: Ingeniería Mecánica
      responses:
        '200':
          description: Facultad actualizada correctamente
        '401':
          description: No autorizado
        '404':
          description: Facultad no encontrada
    patch:
      tags:
        - facultad
      summary: Actualizar parcialmente facultad por ID
      description: Actualiza parcialmente la facultad correspondiente al ID proporcionado
      operationId: actualizarParcialFacultad
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la facultad a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
            example:
              nombre: Ingeniería Civil
      responses:
        '200':
          description: Facultad actualizada correctamente
        '401':
          description: No autorizado
        '404':
          description: Facultad no encontrada
    delete:
      tags:
        - facultad
      summary: Eliminar facultad por ID
      description: Elimina la facultad correspondiente al ID proporcionado
      operationId: eliminarFacultad
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la facultad a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Facultad eliminada correctamente
        '401':
          description: No autorizado
        '404':
          description: Facultad no encontrada

  

  /carrera:
    get:
      tags:
        - carrera
      summary: Obtener todas las carreras
      description: Retorna todas las carreras disponibles
      operationId: obtenerCarreras
      produces:
        - application/json
      responses:
        '200':
          description: Lista de carreras obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Carrera'
          example:
            - id: 1
              nombre: Ingeniería Informática
            - id: 2
              nombre: Medicina
        '401':
          description: No autorizado
    post:
      tags:
        - carrera
      summary: Crear carrera
      description: Solo lo crea el rol admin
      operationId: crearCarrera
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Carrera'
            example:
              nombre: Ingeniería Biomédica
      responses:
        '200':
          description: Carrera creada correctamente
        '401':
          description: No autorizado

  /carrera/{id}:
    get:
      tags:
        - carrera
      summary: Obtener carrera por ID
      description: Retorna la carrera correspondiente al ID proporcionado
      operationId: obtenerCarreraPorId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la carrera a obtener
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Carrera obtenida correctamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Carrera'
          example:
            id: 1
            nombre: Ingeniería Informática
        '401':
          description: No autorizado
        '404':
          description: Carrera no encontrada
    put:
      tags:
        - carrera
      summary: Actualizar carrera por ID
      description: Actualiza la carrera correspondiente al ID proporcionado
      operationId: actualizarCarrera
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la carrera a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Carrera'
            example:
              nombre: Ingeniería Biomédica
      responses:
        '200':
          description: Carrera actualizada correctamente
        '401':
          description: No autorizado
        '404':
          description: Carrera no encontrada
    patch:
      tags:
        - carrera
      summary: Actualizar parcialmente carrera por ID
      description: Actualiza parcialmente la carrera correspondiente al ID proporcionado
      operationId: actualizarParcialCarrera
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la carrera a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
            example:
              nombre: Ingeniería Civil
      responses:
        '200':
          description: Carrera actualizada correctamente
        '401':
          description: No autorizado
        '404':
          description: Carrera no encontrada
    delete:
      tags:
        - carrera
      summary: Eliminar carrera por ID
      description: Elimina la carrera correspondiente al ID proporcionado
      operationId: eliminarCarrera
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la carrera a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Carrera eliminada correctamente
        '401':
          description: No autorizado
        '404':
          description: Carrera no encontrada

  
  

  /materia:
  
    get:
      tags:
        - materia
      summary: Obtener todas las materias
      description: Retorna todas las materias disponibles
      operationId: obtenerMaterias
      produces:
        - application/json
      responses:
        '200':
          description: Lista de materias obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Materia'
          example:
            - id: 1
              nombre: Matemáticas
            - id: 2
              nombre: Física
        '401':
          description: No autorizado
    post:
      tags:
        - materia
      summary: Crear materia
      description: Solo lo crea el rol admin
      operationId: crearMateria
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Materia'
            example:
              nombre: Cálculo Integral
      responses:
        '200':
          description: Materia creada correctamente
        '401':
          description: No autorizado
  
  /materia/{id}:
    get:
      tags:
        - materia
      summary: Obtener materia por ID
      description: Retorna la materia correspondiente al ID proporcionado
      operationId: obtenerMateriaPorId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la materia a obtener
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Materia obtenida correctamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Materia'
          example:
            id: 1
            nombre: Matemáticas
        '401':
          description: No autorizado
        '404':
          description: Materia no encontrada
    put:
      tags:
        - materia
      summary: Actualizar materia por ID
      description: Actualiza la materia correspondiente al ID proporcionado
      operationId: actualizarMateria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la materia a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Materia'
            example:
              nombre: Álgebra
      responses:
        '200':
          description: Materia actualizada correctamente
        '401':
          description: No autorizado
        '404':
          description: Materia no encontrada
    patch:
      tags:
        - materia
      summary: Actualizar parcialmente materia por ID
      description: Actualiza parcialmente la materia correspondiente al ID proporcionado
      operationId: actualizarParcialMateria
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la materia a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
            example:
              nombre: Geometría
      responses:
        '200':
          description: Materia actualizada correctamente
        '401':
          description: No autorizado
        '404':
          description: Materia no encontrada
    delete:
      tags:
        - materia
      summary: Eliminar materia por ID
      description: Elimina la materia correspondiente al ID proporcionado
      operationId: eliminarMateria
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID de la materia a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Materia eliminada correctamente
        '401':
          description: No autorizado
        '404':
          description: Materia no encontrada

  /profesor:
    get:
      tags:
        - profesor
      summary: Obtener todos los profesores
      description: Retorna todos los profesores disponibles
      operationId: obtenerProfesores
      produces:
        - application/json
      responses:
        '200':
          description: Lista de profesores obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Profesor'
          example:
            - id: 1
              nombre: Juan Pérez
            - id: 2
              nombre: María García
        '401':
          description: No autorizado
    post:
      tags:
        - profesor
      summary: Crear profesor
      description: Solo lo crea el rol admin
      operationId: crearProfesor
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Profesor'
            example:
              nombre: Pablo Rodríguez
      responses:
        '200':
          description: Profesor creado correctamente
        '401':
          description: No autorizado
  /profesor/{id}:
    get:
      tags:
        - profesor
      summary: Obtener profesor por ID
      description: Retorna el profesor correspondiente al ID proporcionado
      operationId: obtenerProfesorPorId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del profesor a obtener
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Profesor obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Profesor'
          example:
            id: 1
            nombre: Juan Pérez
        '401':
          description: No autorizado
        '404':
          description: Profesor no encontrado
    put:
      tags:
        - profesor
      summary: Actualizar profesor por ID
      description: Actualiza el profesor correspondiente al ID proporcionado
      operationId: actualizarProfesor
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del profesor a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Profesor'
            example:
              nombre: Pablo Rodríguez
      responses:
        '200':
          description: Profesor actualizado correctamente
        '401':
          description: No autorizado
        '404':
          description: Profesor no encontrado
    patch:
      tags:
        - profesor
      summary: Actualizar parcialmente profesor por ID
      description: Actualiza parcialmente el profesor correspondiente al ID proporcionado
      operationId: actualizarParcialProfesor
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del profesor a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
            example:
              nombre: José Martínez
      responses:
        '200':
          description: Profesor actualizado correctamente
        '401':
          description: No autorizado
        '404':
          description: Profesor no encontrado
    delete:
      tags:
        - profesor
      summary: Eliminar profesor por ID
      description: Elimina el profesor correspondiente al ID proporcionado
      operationId: eliminarProfesor
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del profesor a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Profesor eliminado correctamente
        '401':
          description: No autorizado
        '404':
          description: Profesor no encontrado

  
  /estudiante:
    get:
      tags:
        - estudiante
      summary: Obtener todos los estudiantes
      description: Retorna todos los estudiantes disponibles
      operationId: obtenerEstudiantes
      produces:
        - application/json
      responses:
        '200':
          description: Lista de estudiantes obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Estudiante'
          example:
            - id: 1
              nombre: Ana Martínez
            - id: 2
              nombre: Luis Gómez
        '401':
          description: No autorizado
    post:
      tags:
        - estudiante
      summary: Crear estudiante
      description: Solo lo crea el rol admin
      operationId: crearEstudiante
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Estudiante creado correctamente
        '401':
          description: No autorizado

  /estudiante/{id}:

    get:
      tags:
        - estudiante
      summary: Obtener estudiante por ID
      description: Retorna el estudiante correspondiente al ID proporcionado
      operationId: obtenerEstudiantePorId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del estudiante a obtener
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Estudiante obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Estudiante'
          example:
            id: 1
            nombre: Ana Martínez
        '401':
          description: No autorizado
        '404':
          description: Estudiante no encontrado
    put:
      tags:
        - estudiante
      summary: Actualizar estudiante por ID
      description: Actualiza el estudiante correspondiente al ID proporcionado
      operationId: actualizarEstudiante
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del estudiante a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Estudiante'
            example:
              nombre: Sofía González
      responses:
        '200':
          description: Estudiante actualizado correctamente
        '401':
          description: No autorizado
        '404':
          description: Estudiante no encontrado
    patch:
      tags:
        - estudiante
      summary: Actualizar parcialmente estudiante por ID
      description: Actualiza parcialmente el estudiante correspondiente al ID proporcionado
      operationId: actualizarParcialEstudiante
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del estudiante a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
            example:
              nombre: María López
      responses:
        '200':
          description: Estudiante actualizado correctamente
        '401':
          description: No autorizado
        '404':
          description: Estudiante no encontrado
    delete:
      tags:
        - estudiante
      summary: Eliminar estudiante por ID
      description: Elimina el estudiante correspondiente al ID proporcionado
      operationId: eliminarEstudiante
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID del estudiante a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Estudiante eliminado correctamente
        '401':
          description: No autorizado
        '404':
          description: Estudiante no encontrado


definitions:

  Facultad:
    type: object
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string

  Carrera:
    type: object
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string

  Materia:
    type: object
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string

  Profesor:
    type: object
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string
  
  Estudiante:
    type: object
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string